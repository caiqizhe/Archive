# Problem 1:
key=ENTROPY

Step 1: Guess the keyword length
I have used Kasiski method to predict the keyword length.
This method captures the repeated substrings in the ciphertext.
Reference site for the Kasiki method:
http://www.cs.mtu.edu/~shene/NSF-4/Tutorial/VIG/Vig-Kasiski.html
Based on the theory described on the reference site, 
let k be keyword length, let g be the distance between any repeated
substrings in the ciphertext, then g has to be a multiple of k.
Then, by collecting all repeated substrings (i.e. count of substring
in the ciphertext is greater than 1), I could find all factors of
the distance k_prime. Then the most common factor most likely will
be the keyword length, which is 7 in our case.

Step 2: Compute the frequency for each letter
Once likely keyword length is obtained, split the ciphertext by 
the keyword length. Since plaintext is encrypted repeatedly by 
the keyword. So, the corresponding position in two block must be
encrypted using the same letter. Compute a potential frequency
table and compared with pre-determined letter distribution table 
(i.e. letter_dist, frequency is obtained from part 2). 

Step 3: Get the most likely keyword, with minimum variance
By shifting the letter to the left, total variance of the letter
distribution will change. I will just choose the one with the 
least variance. Then, I have ENTROPY as the result.

Step 4: Verify
The ciphertext is then decrypted and verified online.
CRYPTOGRAPHYISTHEPRACTICEANDSTUDYOFTECHNIQUESFORSECURECOMMUNICATIONINTHEPRESENCEOFTHIRDPARTIESCALLEDADVERSARIESMOREGENERALLYITISABOUTCONSTRUCTINGANDANALYZINGPROTOCOLSTHATOVERCOMETHEINFLUENCEOFADVERSARIESANDWHICHARERELATEDTOVARIOUSASPECTSININFORMATIONSECURITYSUCHASDATACONFIDENTIALITYDATAINTEGRITYAUTHENTICATIONANDNONREPUDIATIONMODERNCRYPTOGRAPHYINTERSECTSTHEDISCIPLINESOFMATHEMATICSCOMPUTERSCIENCEANDELECTRICALENGINEERINGMODERNCRYPTOGRAPHYISHEAVILYBASEDONMATHEMATICALTHEORYANDCOMPUTERSCIENCEPRACTICECRYPTOGRAPHICALGORITHMSAREDESIGNEDAROUNDCOMPUTATIONALHARDNESSASSUMPTIONSMAKINGSUCHALGORITHMSHARDTOBREAKINPRACTICEBYANYADVERSARYITISTHEORETICALLYPOSSIBLETOBREAKSUCHASYSTEMBUTITISINFEASIBLETODOSOBYANYKNOWNPRACTICALMEANSCRYPTOLOGYRELATEDTECHNOLOGYHASRAISEDANUMBEROFLEGALISSUESTHEELECTRONICFRONTIERFOUNDATIONWASINVOLVEDINACASEINTHEUNITEDSTATESWHICHQUESTIONEDWHETHERREQUIRINGSUSPECTEDCRIMINALSTOPROVIDETHEIRDECRYPTIONKEYSTOLAWENFORCEMENTISUNCONSTITUTIONALTHEEFFARGUEDTHATTHISISAVIOLATIONOFTHERIGHTOFNOTBEINGFORCEDTOINCRIMINATEONESELFASGIVENINTHEFIFTHAMENDM

# Problem 2:
part_a_var_english=10.4056677352
part_b_var_plaintext=9.94759333512
part_c_var_ciphertext=[5.08103132571, 3.07705862202, 2.35540418317, 1.58248905165, 1.40227567902]
part_c_explain="observed from output of variance of different ciphertext, the variance of the text decreases as the length of the keyword increases. Therefore, the longer the keyword length, the less random the ciphertext will get."
part_d_means=[10.2479489562, 10.6369117678, 10.8694848547, 11.4942245465, 11.5689517958]
part_d_explain="on contrast to those answers in part_c, the variance appears to be increasing slightly. This is reasonable because when encrypt the message using Caesar Cipher, the variance of encrypted should be very close to the population variance of original message."
part_e_means=[3.83235289044, 4.28397208992, 4.53558551787, 3.332561137] 
part_e_explain="Yes, from the output above, it does suggest a variant to the Kasiski attack. The keyword length still can be guessed by comparing the variance of the ciphertext to the variance of English letter distribution. If the variance tends to be smaller with one particular keyword length, an educated guess would be that the message is encrypted by that one particular keyword length. Furthermore, adjacent keyword length would produce very different distribution and hence produces with a greater variance. Multiple keyword length of k will produce minimal variance. Once again, we can see the repeating pattern in variance. Hence, keyword length can be guessed."

===== part c =====
By using vigerene.py to encrypt plain message, I have the following output.
The process is then repeated as those in part b. I have result as follow:

encrypted using Vigenere Cipher with yz :
ciphertext: csfharjzuzlcsmgucqqhrxnnjhahcrrnbdddlcyrwrrdkxmtldccrnzdyajdrnrggmikgjczlzrsybidpzlcrgysgmaksccrsmbdprrzlcgmescbfmgpsdqsfzrbymzdsrccrnankopnkhqdqdatphrxfnudtdptqhlfrgmrcscbfmgpsdqhlsfdpdykunpkblyxthmkyscsfdjzunpsfdsmgucqqhrxqqskcrymbhrlyxzdsmcsfhazjtlccqqnkdahpbslqsymadqdtdlopnzhlfdnpvczimcrqdqlyxpdqtjsgmqdtdpdndlzjsgdqtnsmzlcgmakscgmedvoskqhmmahthjegmcrymbiyhjsglcnsqnnjhaxgmcdargrrgyswnslsrrqcrndasrgcophtzaxymbopnndpswqgffsqndnrgcqqzrzjkrhkdqnpdjrcxmtuhjkdzgkrgcbmtprczasgmekyvdtjkwzlccsfhazjkwhqxmtpqcrnnlrgagkgswbyqceskjxpdycrgcbmlntrdpepzscymbzztqdybrbdzyzddbdpzjrrzrtrdrgyszqmzbkwbphkhlzjhxdqbmlntrdphlsptqhmmrggrgrmmcndrcucqykjzurrgysentdpmfzajgmetlccqqsymbvfzrsfdjzuopnfhzhrrwnscmmrvymrsmdlcsojhidrggretwhdhlcmtzsudazlqcecqwnssmzlzrsmqldwojdyrcqcugduhrrqomkgbgdqnlqcrnnlrgajdsrcndscbfmmkmfwqcrmtpbcrymbbydlrnnjhaxbnatkdlsqemqetgcckgmcranlbcqlhlfnqmocqsrcndhlemqkzrhmmrdaglnjnexysslyrudjkyrrgcdlfgmcdphlffnlnpbmcczqlclzdprmergctlhtdprgswbmlktlhrxwnszpdpdotgqccrnyagccaws

encrypted using Vigenere Cipher with xyz:
ciphertext:
brgfariyvxlcrlhscqpgsvnnigbfcrqmcbddkbzpwrqclvmtkcdarnyczyjdqmsegmhjhhczkysqybhcqxlcqfzqgmzjtacrrlcbprqymagmdrdzfmfotbqseyszymyctpccqmblkoomlfqdpcbrphqwgludscqrqhkesemrbrdzfmfotbqhkrgbpdxjvlpkakzvthljzqcseckxunorgbsmftdoqhqwroskbqzkbhqkzvzdrldqfhzykrlcbprlkdzgqzslprzkadpcubloomaflfcmqtczhldpqdpkzvpdpskqgmpcubpdmcmxjsfcrrnslymagmzjtagmdcwmskpgnkahsgkcgmbqzkbixgkqglbmtonnigbvgmbcbpgrqfzqwnrktprqbqobasqfdmphsybvymanqlndorxogferrldnqfdoqzqykirhjcrlpdiqdvmttgkidzfjsecblsqpczzrhkekxuerjkvymacsegbxjkvgrvmtopdpnnkqhygkfrxzyqbdtijxoczargbanjntqcqcpzrbzkbzysrbybqaexyzcccbpziqsxrtqcseysypnxbkvaqfkhkykfxdpanjntqcqflsosrfmmqfhpgrlldldrbtdoykiyvprgxrfltdolgxajflfrlcbprqymaugxrseckxuoomgfzhqqxlscllstymqrnblcrnkfidqfhpetvgeflclsaqudzymocebpxlsslymxrslpmbwoiczpcqbthbuhqqrmmkfahbqnkpdpnnkqhyjdrqdldsbagkmklexocrlsqzcrxlczydkqoljhzwclatjcmqqelpfrgcbjhkcrzmmzcqkgmdnqlndosrbmeflelplxrhllsbagkmklexxrtjyrtckiyrqfdblffldbphkegllnoanaczpkdjzdoqncrgbsmftdoqhqwblklrlhqwxlszocqbotfpdarnxzhacavr

encrypted using Vigenere Cipher with wxyz:
ciphertext:
aqfhypjzsxlcqkguaoqhpvnnhfahaprnzbddjayruprdivmtjbccplzdwyjdplrgekikehczjxrswzidnxlcpeysekakqacrqkbdnprzjagmcqcbdkgpqbqsdxrbwkzdqpccplanimpnifqdobatnfrxdludrbptoflfpemraqcbdkgpqbqhjqfdnbykslpkzjyxrfmkwqcsdbjzslpsdbsmescqofrxooskapymzfrlwvzdqkcsdfazhrlcaoqnibahnzsloqymybqdrblonlzhjddnntczgkcrobqlwvpdorjsekqdrbpdlblzhqgdornskxlcekakqagmcbvoqiqhkkahrfjeekcrwkbiwfjsejcnqonnhfaxekcdypgrpeysulslqprqapndyqrgamphrxaxwkbonlndnqwqedfsoldnpecqoxrzhirhibqnnbjravmtsfjkbxgkpecbkrpraxasekekwtdthiwzjacsdfazhiwhovmtnocrlllreygkeqwbwoceqijxnbycpecbkjntpbpenxscwkbzxrqdwzrbbxyzbbbdnxjrpxrtpbrgwqzqkxbkuzphiflzhfxdozmllrrdnflsnrqhkkrgepgrkkcnbpcuaoykhxurpeyscltdnkfzyhgmcrlcaoqswkbvdxrsdbjzsmpndfzhppwnqammptympqmdjasohfidpegrcrwhbflckrzssbazjoceaownqqmzjxrskoldumjdwpcqasgdsfrrommkezgdollqapnnjpgahbsraldsazfmkimfuocrkrpbapymzzydjpnnhfaxzlatiblsocmqcrgcaigmapanjzcqjflflomoaosraldhjcmqixrhkkrdyelnhlexwqslwpudhiyrpecdjdgmabphjdfnjlpbkaczojclxbprkcrgarlhrbpreqwbkjktjfrxulsznbpdmrgqaarnwygcayws

encrypted using Vigenere Cipher with vwxyz:
ciphertext:
zpegbnhxuzizrlhqaoqhoummkdyfcrokacezjayrtoqcltkrldzzqmazwyjdokqfhigigjzwkysowzidmwkbscwqgmxhrbdnqkbdmoqymyekeszyelhlqbqscwqazixbsrzzqmbjimpnhepcrzyrphouemvzrbptnekesckpcszyelhlqbqhipecqzwiunmhakztrfmkvpbrgzhxunmpectiescqneqwrmqicrvjagshwvzdpjbrgdyxjtizbprjibahmyrkrowkadnascmknlzhiccmqraximzopcrhwvpdnqirhiobtdmamcmvhqgdnqmrnvjagmxhrbhicbvophpgniyfthgbfldnwkbiveirhhalsqkkigbtekcdxofqscwqwnpirqsmapndxpqfdknftzxuxlcknlndmpvphbdqqnakqfdmoxrzghqglzolpdgobwnpsfjkawfjscazmtmobyboekekvscskguxlczpegbvhiwhnulsqmapnniofzhgeqwbvnbdtghvpdvzqfdxkjntoaodqvqaymywysrzwzrbawxyezzbpzgoqysppbrgvpypnvziwbmejgmvhfxdnylkoppbphiposrdkkrgdofqnialdrzrbpzghxurodxrfjrbpmcwzihicrlcznprziztfzopeckvsmpnceygsnulscjjquzipqmdizrnkdgbrgdodsxdbflcjqyrvzyxlqzbbpxjqqmziwqrnmjbwogaxqdmasgdreqqrkkigbdapmmmapnniofzkzqpcnapbagikimftnbqnpnzcrvjaazzjpnngezwcjyrkdippdnmcrgczhfldnyllbznkgmblomoznrqdjbflejnjysdkkrdxdkmkjcvyspixqvzhiyrodbcmbekcdmekegjjlpbjzbyrhajzdmoldscarlhqaoqhouzmlhqkgstulszmaocppeoccokxzhyayws

encrypted using Vigenere Cipher with uvwxyz:
ciphertext:
yodfarfvsxlcoiescqmdpvnnfdyfcrnjzbddhywpwrnzivmthzaarnvzwyjdnjpegmegehczhvpqybeznxlcncwqgmwgqacroizbprnvjagmaoazfmclqbqsbvpzymvzqpccnjylkoljifqdmzyrphntdludpznrqhhbpemryoazfmclqbqhhodbpdugslpkxhwvthigwqcsbzhxunlodbsmcqaoqhntooskynwkbhnhwvzdoiaqfhwvhrlcymolkdwdnzslmowkadmzrbloljxflfzjntczeiapqdmhwvpdmphqgmmzrbpdjzjxjsczornsivjagmwgqagmaztmskmdkkahpdhcgmynwkbiudhqglyjqonnfdyvgmyzypgrncwqwnohqprqynlbasncamphpvyvymxknlndlouogfbooldnncaoqznvhirhgzolpdfnavmtqdhidzcgpecbipnpczwoekekurbrjksvjacsbdyxjksdovmtlmapnnhneygkcouzyqyaqijxlzwargyxkjntnzncpzoywkbzvpobybnxbxyzzzzbpzfnpxrtnzpeysvmkxbksxnfkhhvhfxdmxkjntnznflslpofmmncepgriialdryqaoykfvsprguocltdlidxajcicrlcymoqymxrdxrsbzhxuoljdfzhnnulsciiptymnokblcokhfidncepetsdbflcipxqudwvjoceymulssivjxrsimjbwofzwpcqyqebuhnnommkcxebqnhmapnnhneyjdonaldsyxdkmkibuocripnzcruizzydhnlljhwtzlatgzjqqeimcrgcygekcrwjjzcqhdjdnqikaosryjbfleimixrhiipbaghjhlexuoqjyrqzhiyrncablfciabphhbdllnlxkaczmhajzdlnkcrgypjftdlneqwbihirlhntulszlznbotcmaarnuweacaso

===== part D =====
By using caesarCipher.py to encrypt plain message, I have the following output.
The process is then repeated as those in part b. I have result as follow:
encrypted using Vigenere Cipher with yz :
ciphertext: 
csfharjzuzlcsmgucqqhrxnnjhahcrrnbdddlcyrwrrdkxmtldccrnzdyajdrnrggmikgjczlzrsybidpzlcrgysgmaksccrsmbd prrzlcgmescbfmgpsdqsfzrbymzdsrccrnankopnkhqdqdatphrxfnudtdptqhlfrgmrcscbfmgpsdqhlsfdpdykunpkblyxth mkyscsfdjzunpsfdsmgucqqhrxqqskcrymbhrlyxzdsmcsfhazjtlccqqnkdahpbslqsymadqdtdlopnzhlfdnpvczimcrqdql yxpdqtjsgmqdtdpdndlzjsgdqtnsmzlcgmakscgmedvoskqhmmahthjegmcrymbiyhjsglcnsqnnjhaxgmcdargrrgyswns lsrrqcrndasrgcophtzaxymbopnndpswqgffsqndnrgcqqzrzjkrhkdqnpdjrcxmtuhjkdzgkrgcbmtprczasgmekyvdtjkwzlc csfhazjkwhqxmtpqcrnnlrgagkgswbyqceskjxpdycrgcbmlntrdpepzscymbzztqdybrbdzyzddbdpzjrrzrtrdrgyszqmzbk wbphkhlzjhxdqbmlntrdphlsptqhmmrggrgrmmcndrcucqykjzurrgysentdpmfzajgmetlccqqsymbvfzrsfdjzuopnfhzhrrw nscmmrvymrsmdlcsojhidrggretwhdhlcmtzsudazlqcecqwnssmzlzrsmqldwojdyrcqcugduhrrqomkgbgdqnlqcrnnlrga jdsrcndscbfmmkmfwqcrmtpbcrymbbydlrnnjhaxbnatkdlsqemqetgcckgmcranlbcqlhlfnqmocqsrcndhlemqkzrhmmrd aglnjnexysslyrudjkyrrgcdlfgmcdphlffnlnpbmcczqlclzdprmergctlhtdprgswbmlktlhrxwnszpdpdotgqccrnyagccaws

encrypted using Vigenere Cipher with xyz :
ciphertext: 
brgfariyvxlcrlhscqpgsvnnigbfcrqmcbddkbzpwrqclvmtkcdarnyczyjdqmsegmhjhhczkysqybhcqxlcqfzqgmzjtacrrlc bprqymagmdrdzfmfotbqseyszymyctpccqmblkoomlfqdpcbrphqwgludscqrqhkesemrbrdzfmfotbqhkrgbpdxjvlpkakz vthljzqcseckxunorgbsmftdoqhqwroskbqzkbhqkzvzdrldqfhzykrlcbprlkdzgqzslprzkadpcubloomaflfcmqtczhldpqdpk zvpdpskqgmpcubpdmcmxjsfcrrnslymagmzjtagmdcwmskpgnkahsgkcgmbqzkbixgkqglbmtonnigbvgmbcbpgrqfzq wnrktprqbqobasqfdmphsybvymanqlndorxogferrldnqfdoqzqykirhjcrlpdiqdvmttgkidzfjsecblsqpczzrhkekxuerjkvyma csegbxjkvgrvmtopdpnnkqhygkfrxzyqbdtijxoczargbanjntqcqcpzrbzkbzysrbybqaexyzcccbpziqsxrtqcseysypnxbkva qfkhkykfxdpanjntqcqflsosrfmmqfhpgrlldldrbtdoykiyvprgxrfltdolgxajflfrlcbprqymaugxrseckxuoomgfzhqqxlscllstym qrnblcrnkfidqfhpetvgeflclsaqudzymocebpxlsslymxrslpmbwoiczpcqbthbuhqqrmmkfahbqnkpdpnnkqhyjdrqdldsbag kmklexocrlsqzcrxlczydkqoljhzwclatjcmqqelpfrgcbjhkcrzmmzcqkgmdnqlndosrbmeflelplxrhllsbagkmklexxrtjyrtckiyr qfdblffldbphkegllnoanaczpkdjzdoqncrgbsmftdoqhqwblklrlhqwxlszocqbotfpdarnxzhacavr

encrypted using Vigenere Cipher with wxyz :
ciphertext: 
aqfhypjzsxlcqkguaoqhpvnnhfahaprnzbddjayruprdivmtjbccplzdwyjdplrgekikehczjxrswzidnxlcpeysekakqacrqkbd nprzjagmcqcbdkgpqbqsdxrbwkzdqpccplanimpnifqdobatnfrxdludrbptoflfpemraqcbdkgpqbqhjqfdnbykslpkzjyxrfmk wqcsdbjzslpsdbsmescqofrxooskapymzfrlwvzdqkcsdfazhrlcaoqnibahnzsloqymybqdrblonlzhjddnntczgkcrobqlwvp dorjsekqdrbpdlblzhqgdornskxlcekakqagmcbvoqiqhkkahrfjeekcrwkbiwfjsejcnqonnhfaxekcdypgrpeysulslqprqapn dyqrgamphrxaxwkbonlndnqwqedfsoldnpecqoxrzhirhibqnnbjravmtsfjkbxgkpecbkrpraxasekekwtdthiwzjacsdfazhi whovmtnocrlllreygkeqwbwoceqijxnbycpecbkjntpbpenxscwkbzxrqdwzrbbxyzbbbdnxjrpxrtpbrgwqzqkxbkuzphiflzh fxdozmllrrdnflsnrqhkkrgepgrkkcnbpcuaoykhxurpeyscltdnkfzyhgmcrlcaoqswkbvdxrsdbjzsmpndfzhppwnqammpty mpqmdjasohfidpegrcrwhbflckrzssbazjoceaownqqmzjxrskoldumjdwpcqasgdsfrrommkezgdollqapnnjpgahbsralds azfmkimfuocrkrpbapymzzydjpnnhfaxzlatiblsocmqcrgcaigmapanjzcqjflflomoaosraldhjcmqixrhkkrdyelnhlexwqslw pudhiyrpecdjdgmabphjdfnjlpbkaczojclxbprkcrgarlhrbpreqwbkjktjfrxulsznbpdmrgqaarnwygcayws


encrypted using Vigenere Cipher with vwxyz :
ciphertext: 
zpegbnhxuzizrlhqaoqhoummkdyfcrokacezjayrtoqcltkrldzzqmazwyjdokqfhigigjzwkysowzidmwkbscwqgmxhrbd nqkbdmoqymyekeszyelhlqbqscwqazixbsrzzqmbjimpnhepcrzyrphouemvzrbptnekesckpcszyelhlqbqhipecqzwiun mhakztrfmkvpbrgzhxunmpectiescqneqwrmqicrvjagshwvzdpjbrgdyxjtizbprjibahmyrkrowkadnascmknlzhiccmqraxi mzopcrhwvpdnqirhiobtdmamcmvhqgdnqmrnvjagmxhrbhicbvophpgniyfthgbfldnwkbiveirhhalsqkkigbtekcdxofqsc wqwnpirqsmapndxpqfdknftzxuxlcknlndmpvphbdqqnakqfdmoxrzghqglzolpdgobwnpsfjkawfjscazmtmobyboekekv scskguxlczpegbvhiwhnulsqmapnniofzhgeqwbvnbdtghvpdvzqfdxkjntoaodqvqaymywysrzwzrbawxyezzbpzgoqys ppbrgvpypnvziwbmejgmvhfxdnylkoppbphiposrdkkrgdofqnialdrzrbpzghxurodxrfjrbpmcwzihicrlcznprziztfzopeckvs mpnceygsnulscjjquzipqmdizrnkdgbrgdodsxdbflcjqyrvzyxlqzbbpxjqqmziwqrnmjbwogaxqdmasgdreqqrkkigbdapm mmapnniofzkzqpcnapbagikimftnbqnpnzcrvjaazzjpnngezwcjyrkdippdnmcrgczhfldnyllbznkgmblomoznrqdjbflejnjy sdkkrdxdkmkjcvyspixqvzhiyrodbcmbekcdmekegjjlpbjzbyrhajzdmoldscarlhqaoqhouzmlhqkgstulszmaocppeoccok xzhyayws

encrypted using Vigenere Cipher with uvwxyz :
ciphertext: 
yodfarfvsxlcoiescqmdpvnnfdyfcrnjzbddhywpwrnzivmthzaarnvzwyjdnjpegmegehczhvpqybeznxlcncwqgmwgqa croizbprnvjagmaoazfmclqbqsbvpzymvzqpccnjylkoljifqdmzyrphntdludpznrqhhbpemryoazfmclqbqhhodbpdugslpk xhwvthigwqcsbzhxunlodbsmcqaoqhntooskynwkbhnhwvzdoiaqfhwvhrlcymolkdwdnzslmowkadmzrbloljxflfzjntczei apqdmhwvpdmphqgmmzrbpdjzjxjsczornsivjagmwgqagmaztmskmdkkahpdhcgmynwkbiudhqglyjqonnfdyvgmyzy pgrncwqwnohqprqynlbasncamphpvyvymxknlndlouogfbooldnncaoqznvhirhgzolpdfnavmtqdhidzcgpecbipnpczwo ekekurbrjksvjacsbdyxjksdovmtlmapnnhneygkcouzyqyaqijxlzwargyxkjntnzncpzoywkbzvpobybnxbxyzzzzbpzfnpx rtnzpeysvmkxbksxnfkhhvhfxdmxkjntnznflslpofmmncepgriialdryqaoykfvsprguocltdlidxajcicrlcymoqymxrdxrsbzhxu oljdfzhnnulsciiptymnokblcokhfidncepetsdbflcipxqudwvjoceymulssivjxrsimjbwofzwpcqyqebuhnnommkcxebqnhm apnnhneyjdonaldsyxdkmkibuocripnzcruizzydhnlljhwtzlatgzjqqeimcrgcygekcrwjjzcqhdjdnqikaosryjbfleimixrhiipba ghjhlexuoqjyrqzhiyrncablfciabphhbdllnlxkaczmhajzdlnkcrgypjftdlneqwbihirlhntulszlznbotcmaarnuweacaso
